version: '3.8'

services:
  # Frontend - Next.js Dashboard
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_WS_URL=ws://localhost:8000/ws
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - thetagang-net

  # Backend - FastAPI
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://thetagang:password@database:5432/thetagang_dashboard
      - REDIS_URL=redis://redis:6379
      - PYTHONPATH=/app
    volumes:
      - ./backend:/app
      - ../thetagang:/thetagang-system  # Mount ThetaGang system for integration
    depends_on:
      - database
      - redis
    networks:
      - thetagang-net

  # Database - PostgreSQL + TimescaleDB
  database:
    image: timescale/timescaledb:latest-pg15
    environment:
      - POSTGRES_DB=thetagang_dashboard
      - POSTGRES_USER=thetagang
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - thetagang-net

  # Redis - Caching and real-time data
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - thetagang-net

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@thetagang.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    depends_on:
      - database
    networks:
      - thetagang-net
    profiles:
      - dev

volumes:
  postgres_data:
  redis_data:

networks:
  thetagang-net:
    driver: bridge 
